#!/usr/bin/env bash
set -o errexit -o nounset -o pipefail

declare -rx XTEAR_INSTALL_ROOT="${HOME}/.local"
declare -rx XTEAR_BIN_DIR="${XTEAR_INSTALL_ROOT}/bin"
declare -rx XTEAR_DATA_DIR="${XTEAR_INSTALL_ROOT}/share/xtearfree"

function script_dir() {
    # We calculate the script path safely
    local -r self_path="$(realpath -- "${BASH_SOURCE[0]}")"
    dirname -- "${self_path}"
}

function die() {
    >&2 printf "\033[1;31mError:\033[0m %s\n" "$*"
    exit 1
}

function ensure_dirs() {
    mkdir -pv -- "${XTEAR_BIN_DIR}" "${XTEAR_DATA_DIR}" || die "Failure to create directories"
}

function install_binary() {
    local -r src_bin="$(script_dir)/../bin/fs"
    [[ -f "${src_bin}" ]] || die "Binary not found: ${src_bin}"

    install -vC -- "${src_bin}" "${XTEAR_BIN_DIR}/fs" || die "Failed to install binary"
    chmod -v +x -- "${XTEAR_BIN_DIR}/fs" || die "Failed to update permissions"
}

function install_data() {
    local -r src_dir="$(script_dir)/../src"
    local -r init_file="$(script_dir)/../init"

    cp -vr -- "${src_dir}" "${XTEAR_DATA_DIR}/" || die "Crash copying source code"
    install -vC -- "${init_file}" "${XTEAR_DATA_DIR}/" || die "Failed copying init"
}

function uninstall() {
    ([[ -d "${XTEAR_DATA_DIR}" ]] && rm -rvf -- "${XTEAR_DATA_DIR}") || true
    ([[ -f "${XTEAR_BIN_DIR}/fs" ]] && rm -vf -- "${XTEAR_BIN_DIR}/fs") || true
    printf "\033[1;32mUninstall completed\033[0m\n"
}

function main() {
    case "${1:-}" in
    --uninstall | --remove) uninstall ;;
    "" | --install)
        ensure_dirs
        install_binary
        install_data
        printf "\033[1;32mInstallation completed\033[0m\n"
        ;;
    *) die "Invalid option: $1\nUsage: $0 [--install|--uninstall]" ;;
    esac
}

main "$@"
